<?php

namespace FM\SymSlateBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PackExportRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PackExportRepository extends EntityRepository
{
	public function performExport($pack_export_id)
	{
		$export   = $this->find($pack_export_id);
		
		$language = $this->getEntityManager()->getRepository('FMSymSlateBundle:Language')->find($export->getLanguageId());
		$storages = $this->getEntityManager()->getRepository('FMSymSlateBundle:Pack')->getStoragesWithTranslations($export->getPackId(),$export->getLanguageId());
		
		$file_contents = array();
		$footers       = array();
		
		foreach($storages as $storage)
		{
			$cls = $storage->getMessage()->getClassifications();
			if($cls->count() == 1)
			{
				$cl = $cls[0];
				$cts = $cl->getCurrentTranslations();
				if($cts->count() == 1)
				{
					$ct = $cts[0];
					$translation = $ct->getTranslation();
					
					$path = str_replace('/[iso]/', '/' . $language->getCode() . '/', $storage->getPath());
					
					if($storage->getMethod() == 'ARRAY')
					{
						$array = $storage->getCustom();
						if(!isset($file_contents[$path]))
						{
							if($storage->getCategory() != 'Tabs')
							{
								$file_contents[$path] = <<<NOW
<?php

global $array;
$array = array();


NOW;
							}
							else
							{
								$file_contents[$path] = <<<NOW
<?php

$array = array();


NOW;

								$footers[$path] = "\nreturn $array;";

							}
						}
						
						$file_contents[$path] .= "{$array}['" . addslashes($storage->getMessage()->getMkey()) . "'] = '" . addslashes($translation->getText()) . "';\n";
						
					}
					else if($storage->getMethod() == 'FILE')
					{
						$file_contents[$path] = $translation->getText();
					}
					else
					{
						throw new Exception("Unknown storage method: " . $storage->getMethod());	
					}
					
				}
				else
				{
					throw new Exception("Classification ". $cl->getId() . " doesn't have exactly one current translation in this language! (got " . $cts->count() . ")");	
				}
			}
			else
			{
				throw new Exception("Storage ". $storage->getId() . " doesn't have exactly one classification! (got " . $cls->count() . ")");	
			}
		}

		foreach($footers as $path => $data)
		{
			$file_contents[$path] .= $data;
		}
		
		$export->setFilepath($export->getId() . "_" . $language->getName() . "_" . $export->getPack()->getFullName() . ".gzip");
		$archive = new \Archive_Tar($export->getAbsolutePath(), 'gz');
		
		foreach($file_contents as $path => $data)
		{
			$archive->addString($path, $data);
		}
		
		return $export->getAbsolutePath();
		
	}
}
